/*! SoftwareRenderer - ver. 0.1.0 */
function drawInit(){var a=document.getElementById("render"),b=Object.create(OBJmodel);if(a.getContext){var c=a.getContext("2d"),d=drawFunc(b,c);b.load("obj/head.obj",d)}else console.error("Canvas context not supported!")}function drawFunc(a,b){return function(){var c=Object.create(Img);c.init(b),console.log("Canvas loaded");var d=0;window.setInterval(function(){c.clear(0),start=new Date,c.line(13,20,80,40,16777215),c.line(20,13,40,80,16777215);for(var b=0;b<a.faces.length;b++)for(var e=a.faces[b],f=0;3>f;f++){var g=a.verts[e[f]-1],h=a.verts[e[(f+1)%3]-1],i=g[1],j=g[0],k=h[1],l=h[0];const m=d;j=j*Math.cos(m)-g[2]*Math.sin(m),l=l*Math.cos(m)-h[2]*Math.sin(m),i=Math.floor((i/2+.5)*c.h),j=Math.floor((j/2+.5)*c.w),k=Math.floor((k/2+.5)*c.h),l=Math.floor((l/2+.5)*c.w),c.line(i,j,k,l,16777215)}end=new Date;var n="Execution took "+(end.getTime()-start.getTime())+" ms";c.flush(),document.getElementById("info").innerHTML=n,d+=.01},10)}}var Util=new Object,OBJmodel=new Object;OBJmodel.verts=[],OBJmodel.faces=[],OBJmodel.request=function(a){return new Promise(function(b,c){var d=new XMLHttpRequest;d.open("GET",a,!0),d.onload=function(){200==d.status?b(d.response):c(Error(d.statusText))},d.onerror=c,d.send(null)})},OBJmodel.load=function(a,b){var c=this;c.request(a).then(function(a){var d=a.split("\n");c.parse(d),b()},function(a){console.error("request failed!")})},OBJmodel.parse=function(a){for(var b=0;b<a.length;b++){if(0==a[b].indexOf("v ")){var c=a[b].split(" ").splice(1,3);this.verts.push(c)}if(0==a[b].indexOf("f ")){for(var d=a[b].split(" ").splice(1,3),e=0;3>e;e++)d[e]=d[e].split("/")[0];this.faces.push(d)}}console.log("total verts: "+this.verts.length),console.log("total faces: "+this.faces.length)};var Img=new Object;Img.ctx=null,Img.imgData=null,Img.util=null,Img.init=function(a){this.ctx=a,this.util=Object.create(Util),this.calls=0;var b=a.canvas.clientWidth;for(this.log2width=1;b>>=1;)this.log2width++;b=1<<this.log2width,this.w=a.canvas.clientWidth,this.h=a.canvas.clientHeight,this.imgData=a.createImageData(b,this.h),this.buf=new ArrayBuffer(this.imgData.data.length),this.buf8=new Uint8ClampedArray(this.buf),this.buf32=new Uint32Array(this.buf),a.translate(0,this.h),a.scale(1,-1)},Img.clear=function(a){const b=this.buf32.length;for(var c=0;b>c;c++)this.buf32[c]=a+(255<<24)},Img.set=function(a,b,c){const d=(this.h-b<<this.log2width)+a;this.buf32[d]=(c<<8)+255},Img.line=function(a,b,c,d,e){var f=!1;Math.abs(a-c)<Math.abs(b-d)&&(b=[a,a=b][0],d=[c,c=d][0],f=!0),a>c&&(c=[a,a=c][0],d=[b,b=d][0]);const g=c-a,h=d-b,i=Math.abs(h/g);for(var j=0,k=b,l=a;c>=l;l++)f?this.set(l,k,e):this.set(k,l,e),j+=i,j>.5&&(k+=d>b?1:-1,j--);this.calls+=c-a+1},Img.flush=function(){this.imgData.data.set(this.buf8),this.ctx.putImageData(this.imgData,0,0),console.log("Pixel draw calls: "+this.calls)};